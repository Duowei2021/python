"""
下面我们进入一个新的章节，函数。
这一章节，既是重点，也是难点，关系到以后知识点的理解和运用，请一定耐心学好它。
函数很重要，函数很重要，函数很重要，函数很重要，重要的事情说4遍。
"""

# 1.函数的作用
# 1)函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。
# 2)函数能提高应用的模块性，和代码的重复利用率。
# 3)我们知道Python提供了许多内建函数，比如print()。
# 4)但也可以自己创建函数，这被叫做用户自定义函数。




# 2.函数的使用步骤
# （1）定义函数
# def 函数名（参数）:
#   代码1
#   代码2
#   ......

# （2）调用函数
# 函数名（参数）
# 注意：不同的需求，参数可有可无；在Python中，函数必须先定义后调用。




# 3.函数参数的作用
# 对于刚开始接触python的我来说，更准确的讲是对于刚接触编程的我来说，越学到后面，越搞不懂函数以及函数的参数的作用
# 什么形参、实参，搞的一头雾水，下面我就举几个例子，来清晰的认识函数的参数

# 例1：需求，一个函数完成两个数1和2的加法运算，如何书写程序？
# 用我们学到的知识进行编程：

# 第一步：定义函数
def add_num():
    result = 1 + 2
    print(result)
    
# 第二步：调用函数
add_num()

# 运行结果：3


# 上述add_num函数只能完成数字1和2的加法运算，如果想要这个函数变得更灵活，可以计算任何用户指定的两个数字的和，如何书写程序？
#用户要在调用函数的时候指定具体数字，那么在定义函数的时候就需要接收用户指定的数字。
#函数调用时候指定的数字和定义函数时候接收的数字，即是函数的参数。


# 例1（方法二）

def add_num(a,b):
    result = a + b
    print(result)

add_num(3,4)

# 运行结果：7

总结一下：这里的a 和 b ，就是函数的形参；而这里的3 和 4 ，就是函数的实参。




# 4.函数返回值的作用
# 举个例子：我们去便利店买东西，比如买可乐，给钱之后，是不是售货员会返回给我们可乐这个商品，在函数中，如果需要返回结果给用户需要使用函数返回值。

def buy():
    return '可乐'

goods = buy()
print(goods)

# 运行结果：可乐

# 应用到刚才我们的加和函数中，也是可行的。

def add_num(a,b):
    return a + b

result = add_num(3,4)
print(result)

# 运行结果：7




# 5.函数嵌套调用
# 所谓函数嵌套调用指的是一个函数里面又调用了另外一个函数。

def test2():
    print('-----test2 start-----')
    print('这里是test2执行的代码----')
    print('-----test2 end-----')

def test1():
    print('-----test1 start-----')
    test2()
    print('-----test1 end-----')

test1()

# 运行结果：

-----test1 start-----
-----test2 start-----
这里是test2执行的代码----
-----test2 end-----
-----test1 end-----




# 6.函数应用
# 例1：打印一条横线

def print_line():
    print('-' * 20)

print_line()

# 运行结果：

--------------------


# 例2：打印多条横线

def print_line(a):
    i = 0
    while i < a:
        print('-' * 20)
        i += 1

print_line(5)

# 运行结果：

--------------------
--------------------
--------------------
--------------------
--------------------

# 例3：求三个数的平均值

def sum(a,b,c):
    return a + b + c


def average(a,b,c):
    num = sum(a,b,c)
    return num / 3

result1 = sum(4,5,6)
result2 = average(1,2,3)

print(result1)
print(result2)

# 运行结果：

15
2.0

# 这里利用两个函数，分别实现了三个数字相加，以及求三个数字平均值的功能，而且也用到了函数的嵌套调用。
# 这里实现的功能较为单一且简单，体现不出用函数封装功能的优势。
# 但是以后在更加复杂的实例中，会进一步的体现到函数的好处，请大家慢慢体会。




# 7.函数的说明文档
# 最后，在说一下函数的说明文档。
# 今后在python学习中，我们会遇到各种各样的内嵌函数，以及自定义函数。而如何快速的了解一个函数的作用呢？
# 或者，如何让别人迅速了解你自定义的函数的作用呢？
# 这里，只要我们为函数编写说明文档即可，我们看一个例子。

# 例：

def sum(a,b):
    """
    求和函数
    :param a:变量1
    :param b:变量2
    :return:返回求和结果
    """
    return a + b

help(sum)

# 运行结果：

sum(a, b)
    求和函数
    :param a:变量1
    :param b:变量2
    :return:返回求和结果
    
# 可以看到通过 help() 函数，我们完成了函数说明文档的调用，写在代码 """""" 中的说明内容显示了出来。
