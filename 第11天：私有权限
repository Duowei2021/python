# 1.定义私有属性和方法
# 在Python中，可以为实例属性和方法设置私有权限，即设置某个实例属性或实例方法不继承给子类。
# 故事：duowei把技术传承给徒弟的同时，不想把自己的钱(10个亿)继承给徒弟，这个时候就要为钱这个实例属性设置私有权限。
# 设置私有权限的方法：在属性名和方法名 前面 加上两个下划线 __。

class Master():
    def __init__(self):
        self.kongfu = '[古法煎饼果子配方]'

    def make_cake(self):
        print(f'运用{self.kongfu}制作煎饼果子')


class School():
    def __init__(self):
        self.kongfu = '[学院风格煎饼果子配方]'

    def make_cake(self):
        print(f'运用{self.kongfu}制作煎饼果子')


class Prentice(School, Master):
    def __init__(self):
        self.kongfu = '[独创煎饼果子配方]'
        # 定义私有属性
        self.__money = '10个亿'

    # 定义私有方法
    def __info_print(self):
        print(self.kongfu)
        print(self.__money)

    def make_cake(self):
        self.__init__()
        print(f'运用{self.kongfu}制作煎饼果子')

    def make_master_cake(self):
        Master.__init__(self)
        Master.make_cake(self)

    def make_school_cake(self):
        School.__init__(self)
        School.make_cake(self)


# 徒孙类
class Tusun(Prentice):
    pass


xiaowei = Prentice()
# 对象不能访问私有属性和私有方法
# print(xiaowei.__money)
# xiaowei.__info_print()

xiaowei = Tusun()
# 子类无法继承父类的私有属性和私有方法
# print(xiaowei.__money)  # 无法访问实例属性__money
# xiaowei.__info_print()

# 注意：私有属性和私有方法只能在类里面访问和修改。




# 2.获取和修改私有属性值
# 在Python中，一般定义函数名get_xx用来获取私有属性，定义set_xx用来修改私有属性值。
# 注意：get_xx和set_xx 并不是语法格式，而是命名惯例。

class Master(object):
    def __init__(self):
        self.kongfu = '[古法煎饼果子配方]'

    def make_cake(self):
        print(f'运用{self.kongfu}制作煎饼果子')


class School(object):
    def __init__(self):
        self.kongfu = '[学院风格煎饼果子配方]'

    def make_cake(self):
        print(f'运用{self.kongfu}制作煎饼果子')


class Prentice(School, Master):
    def __init__(self):
        self.kongfu = '[独创煎饼果子配方]'
        self.__money = '10个亿'

    # 获取私有属性
    def get_money(self):
        return self.__money

    # 修改私有属性
    def set_money(self):
        self.__money = '1个亿'

    def __info_print(self):
        print(self.kongfu)
        print(self.__money)

    def make_cake(self):
        self.__init__()
        print(f'运用{self.kongfu}制作煎饼果子')

    def make_master_cake(self):
        Master.__init__(self)
        Master.make_cake(self)

    def make_school_cake(self):
        School.__init__(self)
        School.make_cake(self)


# 徒孙类
class Tusun(Prentice):
    pass


duowei = Prentice()

xiaowei = Tusun()
# 调用get_money函数获取私有属性money的值
print(xiaowei.get_money())
# 调用set_money函数修改私有属性money的值
xiaowei.set_money()
print(xiaowei.get_money())

# 运行结果：

10个亿
1个亿
