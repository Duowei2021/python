故事：许多年以后，duowei也老了，想要把所有技术传承给自己的徒弟。

class Master():
    def __init__(self):
        self.kongfu = '[古法制作煎饼果子配方]'

    def make_cake(self):
        print(f'通过{self.kongfu}制作煎饼果子')


class School(Master):       # 注意这里跟前面的示例有点区别，这里是School类继承了Master类
    def __init__(self):
        self.kongfu = '[学院风格制作煎饼果子方法]'

    def make_cake(self):
        print(f'通过{self.kongfu}制作煎饼果子')


class Prentice(School):
    def __init__(self):
        self.kongfu = '[独创制作煎饼果子方法]'

    def make_cake(self):
        self.__init__()
        print(f'通过{self.kongfu}制作煎饼果子')

    def make_Master_cake(self):
        Master.__init__(self)
        Master.make_cake(self)

    def make_School_cake(self):
        School.__init__(self)
        School.make_cake(self)

class Tusun(Prentice):
    pass


xiaowei = Tusun()
xiaowei.make_cake()
xiaowei.make_Master_cake()
xiaowei.make_School_cake()

# 运行结果：

通过[独创制作煎饼果子方法]制作煎饼果子
通过[古法制作煎饼果子配方]制作煎饼果子
通过[学院风格制作煎饼果子方法]制作煎饼果子
